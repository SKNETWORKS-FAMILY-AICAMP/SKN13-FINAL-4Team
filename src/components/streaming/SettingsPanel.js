import React from 'react';
import panelStyles from './Panels.module.css';
import { Button } from 'react-bootstrap';
import DebugPanel from './DebugPanel';
import TTSConfigManager from '../tts/TTSConfigManager';

const SettingsPanel = ({
    // Ìå®ÎÑê ÌëúÏãú ÏÉÅÌÉú
    showDebug,
    showSettingsManager,
    setShowDebug,
    setShowSettingsManager,
    
    // ÎîîÎ≤ÑÍ∑∏ Ï†ïÎ≥¥
    debugInfo,
    syncDebugInfo,
    revealedSubtitle,
    currentVideo,
    videoTransitionRef,
    showSubtitle,
    streamerId,
    isBroadcastingEnabled,
    
    // ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥
    isLoggedIn,
    username
}) => {
    // Ìå®ÎÑêÏù¥ ÌïòÎÇòÎèÑ ÌôúÏÑ±ÌôîÎêòÏßÄ ÏïäÏùÄ Í≤ΩÏö∞ null Î∞òÌôò
    if (!showDebug && !showSettingsManager) {
        return null;
    }

    const handleTabSwitch = (targetTab) => {
        // Î™®Îì† ÌÉ≠ÏùÑ Î®ºÏ†Ä ÎπÑÌôúÏÑ±Ìôî
        setShowDebug(false);
        setShowSettingsManager(false);
        
        // ÌÉÄÍ≤ü ÌÉ≠Îßå ÌôúÏÑ±Ìôî
        switch(targetTab) {
            case 'debug':
                setShowDebug(true);
                break;
            case 'settings':
                setShowSettingsManager(true);
                break;
            default:
                // Ïïå Ïàò ÏóÜÎäî ÌÉ≠Ïù∏ Í≤ΩÏö∞ ÏïÑÎ¨¥Í≤ÉÎèÑ ÌïòÏßÄ ÏïäÏùå
                break;
        }
    };

    const handleCloseAll = () => {
        setShowDebug(false);
        setShowSettingsManager(false);
    };

    return (
        <div className={panelStyles.overlay}>
            <div className={panelStyles.floating}>
                {/* ÌÉ≠ Ìó§Îçî */}
                <div className="d-flex justify-content-between align-items-center mb-3">
                    <div className="d-flex gap-2">
                        <Button 
                            variant={showDebug ? "info" : "outline-info"}
                            size="sm" 
                            onClick={() => handleTabSwitch('debug')}
                        >
                            üîß ÎîîÎ≤ÑÍ∑∏
                        </Button>
                        <Button 
                            variant={showSettingsManager ? "warning" : "outline-warning"}
                            size="sm" 
                            onClick={() => handleTabSwitch('settings')}
                        >
                            ‚öôÔ∏è TTS ÏÑ§Ï†ï
                        </Button>
                    </div>
                    <Button 
                        variant="outline-secondary" 
                        size="sm" 
                        onClick={handleCloseAll}
                        title="Ìå®ÎÑê Îã´Í∏∞"
                    >
                        ‚úï
                    </Button>
                </div>
                
                {/* ÌÉ≠ ÏΩòÌÖêÏ∏† */}
                <div className="settings-content">
                    {/* ÎîîÎ≤ÑÍ∑∏ Ìå®ÎÑê */}
                    {showDebug && (
                        <DebugPanel 
                            debugInfo={debugInfo}
                            syncDebugInfo={syncDebugInfo}
                            revealedSubtitle={revealedSubtitle}
                            currentVideo={currentVideo}
                            videoTransitionRef={videoTransitionRef}
                            showSubtitle={showSubtitle}
                            streamerId={streamerId}
                            isBroadcastingEnabled={isBroadcastingEnabled}
                        />
                    )}
                    
                    {/* TTS ÏÑ§Ï†ï Í¥ÄÎ¶¨ Ìå®ÎÑê */}
                    {showSettingsManager && (
                        <div className="settings-manager-content">
                            <TTSConfigManager 
                                streamerId={streamerId}
                                isLoggedIn={isLoggedIn}
                                username={username}
                            />
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default SettingsPanel;